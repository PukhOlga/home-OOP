courses = ["Python-разработчик с нуля", "Java-разработчик с нуля", "Fullstack-разработчик на Python", "Frontend-разработчик с нуля"]

mentors = [
	["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Ульянцев", "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков", "Роман Гордиенко"],
	["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев", "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский", "Алексей Степанов",
	 "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов", "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
	["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский", "Александр Ульянцев", "Роман Гордиенко",
	 "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков", "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
	["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин", "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]

durations = [14, 20, 12, 20]

courses_list = []
for course, mentor, duration in zip(courses, mentors, durations):
	course_dict = {"title":course, "mentors":mentor, "duration":duration}
	courses_list.append(course_dict)

all_names_list = []
unique_names = {}
for course in courses_list:
	for mentor in course["mentors"]:
		all_names_list.append(mentor.split()[0])
	unique_names = set(all_names_list)
	unique_names_sort = sorted(unique_names)
	#print(unique_names_sort)
	#same_name_list = []
# Напишите алгоритм, который подсчитывает частоту встречаемости каждого имени из names_set в исходном списке преподавателей
# Подсказка: при работе со строками воспользуйтесь конструкцией in
# Внимание: в список same_name_list вы будете сохранять найденных тёзок-преподавателей
# Организуйте цикл по всем именам на курсе из множества:
	for name in unique_names_sort:
		count = 0
		same_name_list = []
		for mentor in course["mentors"]:
			#print(name, mentor)
			if name in mentor:
				count+=1

		if count >=2:
			same_name_list.append(mentors)
		if same_name_list:
			print(same_name_list)

	# Подсчитайте частоту встречаемости имени (должно быть более 1 раза):
#	if ...:
		# Сделайте цикл по исходному списку преподавателей (с Именем и Фамилией)
#		for ...:
			# Найдите тех преподавателей, у кого совпало имя (для них if вернёт True)
#			if ... in ...:
				# Добавьте преподавателя с этим именем в список тёзок
#				same_name_list.append(...)
# Если список тёзок не пустой, выведите всех преподавателей из него
#if same_name_list:
#		print(f'На курсе {course["title"]} есть тёзки: {", ".join(same_name_list)}')


			#		for mentor in course["mentors"]:
#			if name in mentor:
#				count+=1
#				if count > 1 and mentor not in same_name_list:
#					same_name_list.append(mentor)
#	if same_name_list:
#		print(same_name_list)




		# Дополните конструкцию ниже, чтобы выводилось сообщение такого вида: На курсе Название есть тёзки: тёзки через запятую
		# Подсказка: для соединения преподавателей через запятую используйте string.join()
		#print(f'На курсе {...} есть тёзки: {...}')


